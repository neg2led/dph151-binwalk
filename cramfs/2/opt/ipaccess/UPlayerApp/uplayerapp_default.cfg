#SYSM IP Address and Port

SYSM_PORT    7000
SYSM_IPADDRESS	127.0.0.1

# CTRL APP IP Address and Port
CONTROL_APP_PORT        54321
CONTROL_APP_IPADDRESS   127.0.0.1

# RRM IP Address and Port

RRM_PORT	8022
RRM_IP_ADDRESS	127.0.0.1

# this parameter is useful only when the fp lower interface is tcp ip.
#The utran stack in this case acts as a server and the im connects to it

FP_PEER_IP_ADDRESS      picolib
FP_PEER_SERVER_PORT	13107

# Set to either 2 or 3 for a picoArray that uses AHB2Pico HwIF2, previously
#   2 was for 202 and 3 was for 302, but that will be detected automatically
#   now, so either is acceptable.
# Set to 1 for a picoArray that uses AHB2Pico HwIF interface on PC202.
# Set to 0 for PROC_IF interface on PC202
FP_AHB2PICO             2

# Set to 1 if the Pico array will perform F8 encode/decode, set to 0 otherwise
F8_SUPPORT_IN_PICO             1

# IP address for the debug logging
FP_DEBUG_LOG_IP_ADDRESS           127.0.0.1
FP_DEBUG_LOG_UPLINK_UDP_PORT      13108
FP_DEBUG_LOG_DOWNLINK_UDP_PORT    13109

# Used to Set the FP Debug level (0: OFF ; 1: Signalling Only ; 2: DCH + Signalling ; 3 : All)
# Default is set to OFF. It is also controlled from the CLI command
# upl::picofpdebug set <0 or 1 or 2 or 3>
PICO_FP_DEBUG_LEVEL  1

# Used to configure different HSDPA data rates. 
# Maximum is 3600 kbps for all UEs combined
# Uncomment out this line to configure HSDPA Data rate
HSDPA_MAX_DATA_RATE_KBPS	  3600

# Used to configure the data throttling time (in sec) when a signalling message comes on any SRB
# By default, data allowed is set to half for next 3 seconds after every signalling message to
# to allow processing of signalling even in case of higher data rates
# Uncomment out the following line to modify the data throttling time (in sec)
#UPL_DATA_THROTTLE_TIME	3

# Used to configure the display of fp frames in Wireshark. (0: MULTIPLE; 1: SINGLE)
# By default, single frame is displayed 
# Uncomment out the following line to display multiple frames 
#PICO_FP_FRAME_DISPLAY	0

#This is the maximum number of processes running on the AP
MAX_NUM_OF_PROCESSES	30

#This is the type of algorithm chosen to run the low priority pipelines
# 0 is the default algorithm
# 1 is the descheduling algorithm
TYPE_OF_ALGORITHM_CHOSEN    1

# Uplayerapp gets a regular allocation of time, for example 7ms every 10ms.
# After processing high priority pipelines the uplayerapp will use its
# remaining allocation for low priority pipelines.  Alpha is the ratio
# of the normal tick allocation that uplayerapp will try to use.  It's
# normally 1.0, but is reduced whenever uplayerapp detects that monitored
# apps are waiting too long to complete and decides to yield more time to
# them.  High-priority and mandatory low-priority pipelines will be able
# to use the full tick allocation, but flexible low-priority pipelines
# will be run last and will not use more than the reduced limit.  
ALPHA_VALUE_DECREMENT_VALUE     0.2

# This is the minimum value that alpha can be reduced to.
MIN_ALPHA_VALUE                 0.4

# This is a list of apps (named as registered with the crash handler).
# The cpetd driver will return monitor info for these apps each tick.
# For each process a limit in ticks is specified too.  This is how long
# the process normally takes between being woken up and it running to
# completion.  If the process takes longer than this to complete then the
# uplayerapp can reduce alpha to deschedule itself and yield more time.
# The limit should be small for apps that run to completion quickly.
# Apps that regularly run over many ticks will have a higher limit to
# avoid reducing the normal HS data throughput.
MONITORED_APP_0    3gctrlapp     10
MONITORED_APP_1    ipa-rrm       3 
MONITORED_APP_2    ipa-mgr_app   10
MONITORED_APP_3    iapc    3
MONITORED_APP_4    picolibrouter 3

# The uplayerapp scheduler will continue to decrement alpha if processes
# don't complete quickly.  This is the number of ticks that the scheduler
# will wait before it applies another decrement to the alpha value.
# Reducing this will make the desceduling more aggressive.
NUM_OF_CONSECUTIVE_PREEMPTIONS      10

# This parameter determines how many ticks the uplayerapp scheduler will
# wait after all monitored process have run to completion before it
# resets the alpha value to 1.0.  Increasing this value can make the
# descheduling more responsive when multiple messages are being sent
# over short intervals as the descheduling carries over from one message
# to the next.  However, this can reduce the normal throughput.
CONSECUTIVE_TICKS_GAP_LIMIT  5

IUH_ENABLE 1
